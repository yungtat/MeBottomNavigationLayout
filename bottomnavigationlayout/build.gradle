apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

version = "1.0.2"
group = "xt.yungtat"

android {
    compileSdkVersion 27


    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compileOnly 'com.android.support.constraint:constraint-layout:1.1.0'
    compileOnly 'com.android.support:appcompat-v7:27.1.1'
    compileOnly 'com.github.bumptech.glide:glide:4.6.1'
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

Properties properties = new Properties()//先要读取local.properties中的name和key
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("BINTRAY_USER")    //读取 local.properties 文件里面的 bintray.user
    key = properties.getProperty("BINTRAY_KEY")   //读取 local.properties 文件里面的 bintray.apikey
    configurations = ['archives']
    pkg {
        repo = "Android"
        name = "bottomnavigationlayout"    //发布到JCenter上的项目名字，必须填写
        description = "Android bottom navigation bar"    //项目描述
        websiteUrl = rootProject.ext.siteUrl
        vcsUrl = rootProject.ext.gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

//生成源文件
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
//生成文档
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.encoding "UTF-8"
    options.charSet 'UTF-8'
    options.author true
    options.version true
    failOnError false
}



//文档打包成jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
//拷贝javadoc文件
task copyDoc(type: Copy) {
    from "${buildDir}/docs/"
    into "docs"
}


//上传到jcenter所需要的源码文件
artifacts {
    archives javadocJar
    archives sourcesJar
}

// 配置maven库，生成POM.xml文件
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging rootProject.ext.packaging
                name rootProject.ext.name
                url siteUrl
                licenses {
                    license {
                        name rootProject.ext.name
                        url rootProject.ext.siteUrl
                    }
                }
                developers {
                    developer {
                        id rootProject.ext.id
                        name rootProject.ext.name
                        email rootProject.ext.email
                    }
                }
                scm {
                    connection rootProject.ext.gitUrl
                    developerConnection rootProject.ext.gitUrl
                    url rootProject.ext.siteUrl
                }
            }
        }
    }
}
repositories {
    mavenCentral()
}